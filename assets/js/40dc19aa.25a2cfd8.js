(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{102:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return h}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),u=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=u(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),b=r,h=p["".concat(i,".").concat(b)]||p[b]||d[b]||a;return t?o.a.createElement(h,c(c({ref:n},l),{},{components:t})):o.a.createElement(h,c({ref:n},l))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=b;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},82:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return u}));var r=t(3),o=t(7),a=(t(0),t(102)),i={title:"Handlers"},c={unversionedId:"handlers",id:"handlers",isDocsHomePage:!1,title:"Handlers",description:"A Handler is nothing but a function of the type gin.HandlerFunc that contains the logic to handle the request, it has the following signature:",source:"@site/docs/handlers.md",slug:"/handlers",permalink:"/docs/handlers",editUrl:"https://github.com/gocondor/gocondor.github.io/edit/source/docs/handlers.md",version:"current",sidebar:"docs",previous:{title:"Routing",permalink:"/docs/routing"},next:{title:"Request",permalink:"/docs/request-data"}},s=[],l={toc:s};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A Handler is nothing but a function of the type ",Object(a.b)("inlineCode",{parentName:"p"},"gin.HandlerFunc")," that contains the logic to handle the request, it has the following signature:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-go"},"func (c *gin.Context){}\n")),Object(a.b)("p",null,"It accepts a variable of Gin context which provides you will all the functionalities and variables that you may need to process the request"),Object(a.b)("h4",{id:"how-to-organize-your-handlers"},"How to organize your handlers"),Object(a.b)("p",null,"the best way to organize handlers is to think of them like ",Object(a.b)("inlineCode",{parentName:"p"},"controller's actions")," in ",Object(a.b)("inlineCode",{parentName:"p"},"MVC"),". Just like in ",Object(a.b)("inlineCode",{parentName:"p"},"MVC")," where we create a ",Object(a.b)("inlineCode",{parentName:"p"},"controller")," for every ",Object(a.b)("inlineCode",{parentName:"p"},"resource"),", here we create a handlers file for every ",Object(a.b)("inlineCode",{parentName:"p"},"resource"),"."),Object(a.b)("p",null,"For example, let's assume that we are building an app to manage todos which will be added by users. By analyzing we can see that we need to manage two resources: ",Object(a.b)("inlineCode",{parentName:"p"},"users")," and ",Object(a.b)("inlineCode",{parentName:"p"},"todos"),".\nNow let's create these files:"),Object(a.b)("p",null,"1- the first file ",Object(a.b)("inlineCode",{parentName:"p"},"httpd/handlers/users.go")," contains:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-go"},'package handlers\n\nimport (\n    "github.com/gin-gonic/gin"\n)\n\nfunc UsersShow(c *gin.Context) {\n    //show the list of users\n}\n\nfunc UsersStore(c *gin.Context) {\n    // store a user\n}\n\nfunc UsersEdit(c *gin.Context) {\n    // edit a user\n}\n\nfunc UsersDelete(c *gin.Context) {\n    // edit a user\n}\n')),Object(a.b)("p",null,"1- the second file ",Object(a.b)("inlineCode",{parentName:"p"},"httpd/handlers/todos.go")," contains:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-go"},'package handlers\n\nimport (\n    "github.com/gin-gonic/gin"\n)\n\nfunc TodosShow(c *gin.Context) {\n    //show the list of todos\n}\n\nfunc TodosStore(c *gin.Context) {\n    // store a todo\n}\n\nfunc TodosEdit(c *gin.Context) {\n    // edit a todo\n}\n\nfunc TodosDelete(c *gin.Context) {\n    // edit a todo\n}\n')),Object(a.b)("p",null,"Note:\nAs you can see all handler's names are prefixed with the resource's names, and this is to avoid collision between names since all handlers share the same package name ",Object(a.b)("inlineCode",{parentName:"p"},"handlers")))}u.isMDXComponent=!0}}]);