(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return f}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=u(n),d=a,f=b["".concat(i,".").concat(d)]||b[d]||p[d]||o;return n?r.a.createElement(f,c(c({ref:t},l),{},{components:n})):r.a.createElement(f,c({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},99:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),o=(n(0),n(102)),i={title:"Database Configuration"},c={unversionedId:"database-config",id:"database-config",isDocsHomePage:!1,title:"Database Configuration",description:"GoCondor uses GORM for database manipulation, all the features of GORM are available for two databases mysql and sqlite, more databases will be added in the future, to use GORM make sure Database is enabled in the Features struct which located at config/features.go, next add the database connection information to the .env file, here is a sample of it:",source:"@site/docs/database-config.md",slug:"/database-config",permalink:"/docs/database-config",editUrl:"https://github.com/gocondor/gocondor.github.io/edit/source/docs/database-config.md",version:"current",sidebar:"docs",previous:{title:"Contribute",permalink:"/docs/contribute"},next:{title:"Models",permalink:"/docs/database-models"}},s=[],l={toc:s};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"GoCondor uses ",Object(o.b)("a",{parentName:"p",href:"https://gorm.io/"},"GORM")," for database manipulation, all the features of ",Object(o.b)("inlineCode",{parentName:"p"},"GORM")," are available for two databases ",Object(o.b)("inlineCode",{parentName:"p"},"mysql")," and ",Object(o.b)("inlineCode",{parentName:"p"},"sqlite"),", more databases will be added in the future, to use GORM make sure ",Object(o.b)("inlineCode",{parentName:"p"},"Database")," is enabled in the ",Object(o.b)("inlineCode",{parentName:"p"},"Features")," struct which located at ",Object(o.b)("inlineCode",{parentName:"p"},"config/features.go"),", next add the database connection information to the ",Object(o.b)("inlineCode",{parentName:"p"},".env")," file, here is a sample of it:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"#################################\n###            DATABASE       ###\n#################################\nDB_DRIVER=mysql  # mysql | sqlite\n\n# MYSQL\nMYSQL_HOST=localhost\nMYSQL_DB_NAME=gocondor\nMYSQL_PORT=3306\nMYSQL_USERNAME=root\nMYSQL_PASSWORD=\nMYSQL_CHARSET=utf8mb4\n\n# SQLITE\nSQLITE_DB=database/db.sqlite\n")),Object(o.b)("p",null,"more information available at ",Object(o.b)("a",{parentName:"p",href:"https://gorm.io/docs/"},"GORM docs")))}u.isMDXComponent=!0}}]);