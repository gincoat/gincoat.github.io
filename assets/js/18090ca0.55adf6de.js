"use strict";(self.webpackChunkgocondor_site=self.webpackChunkgocondor_site||[]).push([[825],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5960:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={title:"Context"},i=void 0,l={unversionedId:"context",id:"context",title:"Context",description:"The context is an object that provides you with all the functionalities and information you need to handle a request, it contains things like request headers, form's post data, uploaded files, database orm, sending emails, ...etc.",source:"@site/docs/context.md",sourceDirName:".",slug:"/context",permalink:"/docs/context",draft:!1,editUrl:"https://github.com/gocondor/gocondor.github.io/edit/source/docs/context.md",tags:[],version:"current",frontMatter:{title:"Context"},sidebar:"docsSidebar",previous:{title:"Handlers",permalink:"/docs/handlers"},next:{title:"Request",permalink:"/docs/request"}},s={},p=[{value:"Get the URL parameters",id:"get-the-url-parameters",level:3},{value:"Get the request parameters",id:"get-the-request-parameters",level:3},{value:"Check if a request parameter exists",id:"check-if-a-request-parameter-exists",level:3},{value:"Gets the value of a request header",id:"gets-the-value-of-a-request-header",level:3},{value:"Handle uploaded files",id:"handle-uploaded-files",level:3},{value:"Move files from one location to another",id:"move-files-from-one-location-to-another",level:3},{value:"Copy files",id:"copy-files",level:3},{value:"Convert maps to json",id:"convert-maps-to-json",level:3},{value:"Get the project&#39;s base directory path",id:"get-the-projects-base-directory-path",level:3},{value:"Convert variables to strings",id:"convert-variables-to-strings",level:3},{value:"Convert variables to int",id:"convert-variables-to-int",level:3},{value:"Convert variables to float",id:"convert-variables-to-float",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The context is an ",(0,o.kt)("inlineCode",{parentName:"p"},"object")," that provides you with all the functionalities and information you need to handle a request, it contains things like ",(0,o.kt)("inlineCode",{parentName:"p"},"request headers"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"form's post data"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"uploaded files"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"database orm"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"sending emails"),", ...etc.\nIn addition to that it contains the ",(0,o.kt)("inlineCode",{parentName:"p"},"response object")," which contains various functions to return different types of responses like ",(0,o.kt)("inlineCode",{parentName:"p"},"json"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"html"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"text")," ...etc.\nBelow are more details about the functionalities that the context provides you with:"),(0,o.kt)("h3",{id:"get-the-url-parameters"},"Get the URL parameters"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"GetPathParam(key string)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *core.Context) {\n    // route: example.com/users/:name\n    name := c.GetPathParam("name")\n}\n')),(0,o.kt)("h3",{id:"get-the-request-parameters"},"Get the request parameters"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"GetRequestParam(key string)")," to get the forms data (",(0,o.kt)("inlineCode",{parentName:"p"},"post"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"get"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"put"),",...etc)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *core.Context) {\n    // URL: example.com/users?name=jhon\n    name := c.GetRequestParam("name")\n    \n    fmt.Println(name) // outputs john\n}\n')),(0,o.kt)("h3",{id:"check-if-a-request-parameter-exists"},"Check if a request parameter exists"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"RequestParamExists(key string)")," It check's if a request parameter exists, it returns ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," if it exists and ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," if it doesn't"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *core.Context) {\n    // URL: example.com/users?name=jhon\n    nameExists := c.RequestParamExists("name")\n    if nameExists {\n        // name exists\n    }\n}\n')),(0,o.kt)("h3",{id:"gets-the-value-of-a-request-header"},"Gets the value of a request header"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"GetHeader(key string)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *core.Context) {\n    realIPAddress := c.GetHeader("X-Forwarded-For")\n}\n')),(0,o.kt)("h3",{id:"handle-uploaded-files"},"Handle uploaded files"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"GetUploadedFile(key string)")," Returns information about the uploaded file like ",(0,o.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"path")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *core.Context) {\n    fileInfo, err := c.GetUploadedFile("key-name")\n    fileInfo.FullPath // full path to the temporary location of the uploaded file\n    fileInfo.Name // the name of the file\n}\n')),(0,o.kt)("p",null,"Where:\n",(0,o.kt)("inlineCode",{parentName:"p"},"fileinfo")," is an object that has general information about the uploaded file, here is all the file information that it provides:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"fileInfo.FullPath"),": full path to the temporary location of the uploaded file"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"fileInfo.Name"),": the file name without the path"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"fileInfo.NameWithoutExtension"),": the file name without extension"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"fileInfo.Extension"),": the extension of the file"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"fileInfo.Size"),": the file size in bytes")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Save uploaded file to a specific location:"),"\nGoCondor stores all uploaded files in a temporary location, to save it to a specific location, you can simply move it using the function ",(0,o.kt)("inlineCode",{parentName:"p"},"MoveFile(srcPath, destPath, newFilename)"),", here is how:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="moving uploaded file to storage dir"',title:'"moving',uploaded:!0,file:!0,to:!0,storage:!0,'dir"':!0},'func SaveFile(c *core.Context) {\n    fileinfo, err := c.GetUploadedFile("key-name")\n    err := c.MoveFile(fileinfo.FullPath, "./storage/files", "myfile.pdf")\n    if err != nil {\n        // error moving the file\n    }\n}\n')),(0,o.kt)("h3",{id:"move-files-from-one-location-to-another"},"Move files from one location to another"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"MoveFile(srcPath, destLocation, newFileName)")," helps you move files from one location to another, it returns an error in case of any"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *core.Context) {\n    err := c.MoveFile("./storage/myfile.paf", "./storage/pdfs/", "new-filename.pdf") \n}\n')),(0,o.kt)("h3",{id:"copy-files"},"Copy files"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"CopyFile(srcPath, destLocation, newFileName)")," helps you copy files from one location to another, it returns an error in case of any"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *core.Context) {\n    err := c.CopyFile("./storage/myfile.paf", "./storage/pdfs/", "new-filename.pdf") \n}\n')),(0,o.kt)("h3",{id:"convert-maps-to-json"},"Convert maps to json"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"MapToJson(myMap map[string]interface{})")," can help you convert maps to json"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func SomeHandler(c *core.Context) {\n    jsonString := c.MapToJson(myMap)\n}\n")),(0,o.kt)("h3",{id:"get-the-projects-base-directory-path"},"Get the project's base directory path"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"GetBaseDirPath()")," gives you the full path to the project's base directory bath in a string format"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func SomeHandler(c *core.Context) {\n    path := c.GetBaseDirPath()\n}\n")),(0,o.kt)("h3",{id:"convert-variables-to-strings"},"Convert variables to strings"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"CastToString(value interface{})")," helps you convert variables to strings, it panics if the variable is not convertible to string"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func SomeHandler(c *core.Context) {\n    str := c.CastToString(valueStr)\n}\n")),(0,o.kt)("h3",{id:"convert-variables-to-int"},"Convert variables to int"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"CastToInt(value interface{})")," convert variables to ",(0,o.kt)("inlineCode",{parentName:"p"},"int")," including ",(0,o.kt)("inlineCode",{parentName:"p"},"(int32, int64, ...etc)"),", it panics if it's not convertible to ",(0,o.kt)("inlineCode",{parentName:"p"},"int")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func SomeHandler(c *core.Context) {\n    valueInt := c.CastToInt(valueStr)\n}\n")),(0,o.kt)("h3",{id:"convert-variables-to-float"},"Convert variables to float"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"CastToFloat(value interface{})")," convert variables to ",(0,o.kt)("inlineCode",{parentName:"p"},"float64"),", it panics if it's not convertible to ",(0,o.kt)("inlineCode",{parentName:"p"},"float64")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func SomeHandler(c *core.Context) {\n    valueFloat64 := c.CastToFloat(value)\n}\n")))}d.isMDXComponent=!0}}]);