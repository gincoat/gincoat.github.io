"use strict";(self.webpackChunkgocondor_site=self.webpackChunkgocondor_site||[]).push([[826],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(t),u=a,g=d["".concat(p,".").concat(u)]||d[u]||m[u]||o;return t?r.createElement(g,i(i({ref:n},c),{},{components:t})):r.createElement(g,i({ref:n},c))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6528:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={title:"Gaffer"},i=void 0,l={unversionedId:"gaffer",id:"gaffer",title:"Gaffer",description:"Gaffer is GoCondor's cli tool, it helps with creating new GoCondor projects and performing other tasks.",source:"@site/docs/gaffer.md",sourceDirName:".",slug:"/gaffer",permalink:"/docs/gaffer",draft:!1,editUrl:"https://github.com/gocondor/gocondor.github.io/edit/source/docs/gaffer.md",tags:[],version:"current",frontMatter:{title:"Gaffer"},sidebar:"docsSidebar",previous:{title:"Relationships (Associations)",permalink:"/docs/database-relationships"},next:{title:"Contribute",permalink:"/docs/contribute"}},p={},s=[{value:"Create new project using Gaffer",id:"create-new-project-using-gaffer",level:3},{value:"Running the project in hot reloading mode",id:"running-the-project-in-hot-reloading-mode",level:3},{value:"Generators commands",id:"generators-commands",level:3},{value:"Generate a Handler",id:"generate-a-handler",level:4},{value:"Generate a middleware",id:"generate-a-middleware",level:4},{value:"Generate a model",id:"generate-a-model",level:4}],c={toc:s},d="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Gaffer")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"GoCondor's")," ",(0,a.kt)("inlineCode",{parentName:"p"},"cli")," tool, it helps with creating new ",(0,a.kt)("inlineCode",{parentName:"p"},"GoCondor")," projects and performing other tasks.\nHere is how you can install ",(0,a.kt)("inlineCode",{parentName:"p"},"Gaffer")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"go install github.com/gocondor/gaffer@latest\n")),(0,a.kt)("h3",{id:"create-new-project-using-gaffer"},"Create new project using Gaffer"),(0,a.kt)("p",null,"Here is how you can create new ",(0,a.kt)("inlineCode",{parentName:"p"},"goCondor's")," projects using ",(0,a.kt)("inlineCode",{parentName:"p"},"gaffer")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gaffer new [project-name] [project-remote-repository]\n")),(0,a.kt)("p",null,"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gaffer new myapp github.com/gocondor/myapp\n")),(0,a.kt)("p",null,"where:\n",(0,a.kt)("inlineCode",{parentName:"p"},"project-name")," is the name of your project\n",(0,a.kt)("inlineCode",{parentName:"p"},"remote-repository")," is the remote repository that will host the project, usually ",(0,a.kt)("inlineCode",{parentName:"p"},"github.com")," is used."),(0,a.kt)("h3",{id:"running-the-project-in-hot-reloading-mode"},"Running the project in hot reloading mode"),(0,a.kt)("p",null,"For development purpose you might want to run your project in ",(0,a.kt)("inlineCode",{parentName:"p"},"hot reloading")," mode, here is how you can do that.\nFirst ",(0,a.kt)("inlineCode",{parentName:"p"},"cd")," into the project directory and then run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gaffer run:dev\n")),(0,a.kt)("h3",{id:"generators-commands"},"Generators commands"),(0,a.kt)("p",null,"In ",(0,a.kt)("inlineCode",{parentName:"p"},"gaffer")," there is a way to generate different files with boilerplate code to speed up your development process, below are the different generators commands in ",(0,a.kt)("inlineCode",{parentName:"p"},"gaffer")),(0,a.kt)("h4",{id:"generate-a-handler"},"Generate a Handler"),(0,a.kt)("p",null,"To generate a request handler with the name ",(0,a.kt)("inlineCode",{parentName:"p"},"UsersLogin")," placed in the file ",(0,a.kt)("inlineCode",{parentName:"p"},"handlers/users.go")," run the following command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gaffer gen:handler UsersLogin -f users.go\n")),(0,a.kt)("p",null,"where:\n",(0,a.kt)("inlineCode",{parentName:"p"},"UsersLogin"),": is the name of the handler func\n",(0,a.kt)("inlineCode",{parentName:"p"},"-f users.go"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"-f")," is a flag indicates the file which the handler func will be placed in, ",(0,a.kt)("inlineCode",{parentName:"p"},"users.go")," is the name of the file to place the handler in,  new file will be created if it's not exist.\nthe result will be the following file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="#file: handlers/users.go"',title:'"#file:','handlers/users.go"':!0},'package handlers\n\nimport (\n    "github.com/gocondor/core"\n)\n\nfunc UsersLogin(c *core.Context) *core.Response {\n    // logic implementation goes here...\n\n    return nil\n}\n')),(0,a.kt)("h4",{id:"generate-a-middleware"},"Generate a middleware"),(0,a.kt)("p",null,"To generate a middleware with the name ",(0,a.kt)("inlineCode",{parentName:"p"},"AuthCheck")," run the following command "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gaffer gen:middleware AuthCheck\n")),(0,a.kt)("p",null,"this command will generate the file ",(0,a.kt)("inlineCode",{parentName:"p"},"middlewares/auth-check.go")," with the following code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package middlewares\n\nimport (\n    "github.com/gocondor/core"\n)\n\nvar AuthCheck core.Middleware = func (c *core.Context) {\n    c.Next()\n}\n')),(0,a.kt)("h4",{id:"generate-a-model"},"Generate a model"),(0,a.kt)("p",null,"To generate a model with the name ",(0,a.kt)("inlineCode",{parentName:"p"},"user")," run the following command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gaffer gen:model user\n")),(0,a.kt)("p",null,"this command with generate the file ",(0,a.kt)("inlineCode",{parentName:"p"},"models/user.go")," with the following code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package models\n\nimport "gorm.io/gorm"\n\ntype user struct {\n    gorm.Model\n    // add your field here...\n}\n\n// Override the table name\nfunc (user) TableName() string {\n    return "users"\n}\n\n')))}m.isMDXComponent=!0}}]);