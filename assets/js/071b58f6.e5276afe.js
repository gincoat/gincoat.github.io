(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return p}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),b=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=b(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},g=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=b(n),g=r,p=d["".concat(o,".").concat(g)]||d[g]||u[g]||i;return n?a.a.createElement(p,c(c({ref:t},s),{},{components:n})):a.a.createElement(p,c({ref:t},s))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=g;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},67:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),i=(n(0),n(102)),o={title:"Gin Context"},c={unversionedId:"gin-context",id:"gin-context",isDocsHomePage:!1,title:"Gin Context",description:"Gin Context is a struct that provides you with all the functionalities and information that you need to handle a request, it contains things like headers, request data, attachments and more, below are some methods provided in the context, for more check the Gin Context Docs:",source:"@site/docs/gin-context.md",slug:"/gin-context",permalink:"/docs/gin-context",editUrl:"https://github.com/gocondor/gocondor.github.io/edit/source/docs/gin-context.md",version:"current",sidebar:"docs",previous:{title:"Response",permalink:"/docs/response"},next:{title:"Validation and Input Binding",permalink:"/docs/validation"}},l=[{value:"Abort()",id:"abort",children:[]},{value:"AbortWithStatus(code int)",id:"abortwithstatuscode-int",children:[]},{value:"AbortWithStatusJSON(code int, jsonObj interface{})",id:"abortwithstatusjsoncode-int-jsonobj-interface",children:[]},{value:"IsAborted()",id:"isaborted",children:[]},{value:"Set(key string, value interface{})",id:"setkey-string-value-interface",children:[]},{value:"Get(key string)",id:"getkey-string",children:[]},{value:"MustGet(key string)",id:"mustgetkey-string",children:[]},{value:"GetString(key string) (s string)",id:"getstringkey-string-s-string",children:[]},{value:"GetBool(key string) (b bool)",id:"getboolkey-string-b-bool",children:[]},{value:"GetInt(key string) (i int)",id:"getintkey-string-i-int",children:[]},{value:"GetInt64(key string) (i64 int64)",id:"getint64key-string-i64-int64",children:[]},{value:"GetFloat64(key string) (f64 float64)",id:"getfloat64key-string-f64-float64",children:[]},{value:"Param(key string) string",id:"paramkey-string-string",children:[]},{value:"Query(key string) string",id:"querykey-string-string",children:[]},{value:"DefaultQuery(key, defaultValue string) string",id:"defaultquerykey-defaultvalue-string-string",children:[]},{value:"QueryMap(key string) mapstringstring",id:"querymapkey-string-mapstringstring",children:[]},{value:"PostForm(key string) string",id:"postformkey-string-string",children:[]},{value:"DefaultPostForm(key, defaultValue string) string",id:"defaultpostformkey-defaultvalue-string-string",children:[]},{value:"MultipartForm() (*multipart.Form, error)",id:"multipartform-multipartform-error",children:[]},{value:"SaveUploadedFile(file *multipart.FileHeader, dst string) error",id:"saveuploadedfilefile-multipartfileheader-dst-string-error",children:[]},{value:"Bind(obj interface{}) error",id:"bindobj-interface-error",children:[]},{value:"BindJSON(obj interface{}) error",id:"bindjsonobj-interface-error",children:[]},{value:"BindXML(obj interface{}) error",id:"bindxmlobj-interface-error",children:[]},{value:"BindQuery(obj interface{}) error",id:"bindqueryobj-interface-error",children:[]},{value:"BindYAML(obj interface{}) error",id:"bindyamlobj-interface-error",children:[]},{value:"BindHeader(obj interface{}) error",id:"bindheaderobj-interface-error",children:[]},{value:"ClientIP() string",id:"clientip-string",children:[]},{value:"IsWebsocket() bool",id:"iswebsocket-bool",children:[]},{value:"Header()",id:"header",children:[]},{value:"SetCookie(name, value string, maxAge int, path, domain string, secure, httpOnly bool)",id:"setcookiename-value-string-maxage-int-path-domain-string-secure-httponly-bool",children:[]},{value:"Cookie(name string) (string, error)",id:"cookiename-string-string-error",children:[]},{value:"HTML(code int, name string, obj interface{})",id:"htmlcode-int-name-string-obj-interface",children:[]},{value:"JSON(code int, obj interface{})",id:"jsoncode-int-obj-interface",children:[]},{value:"XML(code int, obj interface{})",id:"xmlcode-int-obj-interface",children:[]},{value:"XML(code int, obj interface{})",id:"xmlcode-int-obj-interface-1",children:[]},{value:"File(filepath string)",id:"filefilepath-string",children:[]},{value:"FileAttachment(filepath, filename string)",id:"fileattachmentfilepath-filename-string",children:[]}],s={toc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Gin Context is a struct that provides you with all the functionalities and information that you need to handle a request, it contains things like ",Object(i.b)("inlineCode",{parentName:"p"},"headers"),", ",Object(i.b)("inlineCode",{parentName:"p"},"request data"),", ",Object(i.b)("inlineCode",{parentName:"p"},"attachments")," and more, below are some methods provided in the context, for more check the ",Object(i.b)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/gin-gonic/gin#Context"},"Gin Context Docs"),":"),Object(i.b)("h3",{id:"abort"},"Abort()"),Object(i.b)("p",null,"Prevents pending handlers/middlewares from being called"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"func SomeHandler(c *gin.Context) {\n    c.Abort()\n}\n")),Object(i.b)("h3",{id:"abortwithstatuscode-int"},"AbortWithStatus(code int)"),Object(i.b)("p",null,"Prevents pending handlers/middlewares from being called and writes headers with the given status code"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"func SomeHandler(c *gin.Context) {\n    c.AbortWithStatus(http.StatusBadRequest)\n}\n\n")),Object(i.b)("h3",{id:"abortwithstatusjsoncode-int-jsonobj-interface"},"AbortWithStatusJSON(code int, jsonObj interface{})"),Object(i.b)("p",null,"Prevents pending handlers/middlewares from being called and writes headers with the given status code and returns a ",Object(i.b)("inlineCode",{parentName:"p"},"json")," body as well"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    c.AbortWithStatusJSON(http.StatusInternalServerError, gin.H{"message": "something went wrong"})\n}\n\n')),Object(i.b)("h3",{id:"isaborted"},"IsAborted()"),Object(i.b)("p",null,"Returns true if the current context was aborted."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"func SomeHandler(c *gin.Context) {\n    c.IsAborted()\n}\n")),Object(i.b)("h3",{id:"setkey-string-value-interface"},"Set(key string, value interface{})"),Object(i.b)("p",null,"Stores a new key/value pair exclusively for this context."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    c.Set("mykey", "my value")\n}\n')),Object(i.b)("h3",{id:"getkey-string"},"Get(key string)"),Object(i.b)("p",null,"Returns the value for the given key, ie: (value, true).  If the value does not exist it returns (nil, false)"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    c.Get("mykey")\n}\n')),Object(i.b)("h3",{id:"mustgetkey-string"},"MustGet(key string)"),Object(i.b)("p",null,"Returns the value for the given key if it exists, otherwise it panics."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    c.MustGet("mykey")\n}\n')),Object(i.b)("h3",{id:"getstringkey-string-s-string"},"GetString(key string) (s string)"),Object(i.b)("p",null,"Returns the value associated with the key as a string."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    c.GetString("mykey")\n}\n')),Object(i.b)("h3",{id:"getboolkey-string-b-bool"},"GetBool(key string) (b bool)"),Object(i.b)("p",null,"Returns the value associated with the key as boolean."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    c.GetBool("mykey")\n}\n')),Object(i.b)("h3",{id:"getintkey-string-i-int"},"GetInt(key string) (i int)"),Object(i.b)("p",null,"Returns the value associated with the key as an integer."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    c.GetInt("mykey")\n}\n')),Object(i.b)("h3",{id:"getint64key-string-i64-int64"},"GetInt64(key string) (i64 int64)"),Object(i.b)("p",null,"Returns the value associated with the key as an int64."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    c.GetInt64("mykey")\n}\n')),Object(i.b)("h3",{id:"getfloat64key-string-f64-float64"},"GetFloat64(key string) (f64 float64)"),Object(i.b)("p",null,"Returns the value associated with the key as a float64"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    c.GetFloat64("mykey")\n}\n')),Object(i.b)("h3",{id:"paramkey-string-string"},"Param(key string) string"),Object(i.b)("p",null,"Returns the value of the URL parameter."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    # router.GET("/user/:id, handlers.SomeHandler)\n    id := c.Param("id")\n}\n')),Object(i.b)("h3",{id:"querykey-string-string"},"Query(key string) string"),Object(i.b)("p",null,"Returns the keyed url query value if it exists"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    #  GET /path?id=1234&name=Manu\n    id := c.Query("id")\n    name := c.Query("name")\n}\n')),Object(i.b)("h3",{id:"defaultquerykey-defaultvalue-string-string"},"DefaultQuery(key, defaultValue string) string"),Object(i.b)("p",null,"Returns the keyed url query value if it exists, otherwise it returns the specified defaultValue string."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    #  GET /path?name=Manu\n    name := c.DefaultQuery("name", "jack")\n}\n')),Object(i.b)("h3",{id:"querymapkey-string-mapstringstring"},"QueryMap(key string) map","[string]","string"),Object(i.b)("p",null,"Returns a map for a given query key."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    c.QueryMap("key")\n}\n')),Object(i.b)("h3",{id:"postformkey-string-string"},"PostForm(key string) string"),Object(i.b)("p",null,"Returns the specified key from a POST urlencoded form or multipart form when it exists, otherwise it returns an empty string"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    c.PostForm("key")\n}\n')),Object(i.b)("h3",{id:"defaultpostformkey-defaultvalue-string-string"},"DefaultPostForm(key, defaultValue string) string"),Object(i.b)("p",null,"Returns the specified key from a POST urlencoded form or multipart form when it exists, otherwise it returns the specified defaultValue string."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'func SomeHandler(c *gin.Context) {\n    key := c.PostForm("key", "default value")\n}\n')),Object(i.b)("h3",{id:"multipartform-multipartform-error"},"MultipartForm() (","*","multipart.Form, error)"),Object(i.b)("p",null,"MultipartForm is the parsed multipart form, including file uploads"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"func SomeHandler(c *gin.Context) {\n    form := c.MultipartForm()\n}\n")),Object(i.b)("h3",{id:"saveuploadedfilefile-multipartfileheader-dst-string-error"},"SaveUploadedFile(file ","*","multipart.FileHeader, dst string) error"),Object(i.b)("p",null,"Saves the uploaded form file to specific destination."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"func SomeHandler(c *gin.Context) {\n    err := c.SaveUploadedFile(file, dest)\n}\n")),Object(i.b)("h3",{id:"bindobj-interface-error"},"Bind(obj interface{}) error"),Object(i.b)("p",null,"Fills the given object with the request data"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"\nfunc SomeHandler(c *gin.Context) {\n    var obj Object\n    err := c.Bind(&obj)\n}\n")),Object(i.b)("h3",{id:"bindjsonobj-interface-error"},"BindJSON(obj interface{}) error"),Object(i.b)("p",null,"Fills the given object with the request ",Object(i.b)("inlineCode",{parentName:"p"},"json")," data "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"\nfunc SomeHandler(c *gin.Context) {\n    var obj Object\n    err := c.BindJSON(&obj)\n}\n")),Object(i.b)("h3",{id:"bindxmlobj-interface-error"},"BindXML(obj interface{}) error"),Object(i.b)("p",null,"Fills the given object with the request ",Object(i.b)("inlineCode",{parentName:"p"},"xml")," data "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"\nfunc SomeHandler(c *gin.Context) {\n    var obj Object\n    err := c.BindXML(&obj)\n}\n")),Object(i.b)("h3",{id:"bindqueryobj-interface-error"},"BindQuery(obj interface{}) error"),Object(i.b)("p",null,"Fills the given object with the request ",Object(i.b)("inlineCode",{parentName:"p"},"query")," data "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"\nfunc SomeHandler(c *gin.Context) {\n    var obj Object\n    err := c.BindQuery(&obj)\n}\n")),Object(i.b)("h3",{id:"bindyamlobj-interface-error"},"BindYAML(obj interface{}) error"),Object(i.b)("p",null,"Fills the given object with the request ",Object(i.b)("inlineCode",{parentName:"p"},"yaml")," data "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"\nfunc SomeHandler(c *gin.Context) {\n    var obj Object\n    err := c.BindYAML(&obj)\n}\n")),Object(i.b)("h3",{id:"bindheaderobj-interface-error"},"BindHeader(obj interface{}) error"),Object(i.b)("p",null,"Fills the given object with the request ",Object(i.b)("inlineCode",{parentName:"p"},"header")," data "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"\nfunc SomeHandler(c *gin.Context) {\n    var obj Object\n    err := c.BindHeader(&obj)\n}\n")),Object(i.b)("h3",{id:"clientip-string"},"ClientIP() string"),Object(i.b)("p",null,"Implements the best effort algorithm to return the real client IP, it parses X-Real-IP and X-Forwarded-For in order to work properly with reverse-proxies such us: nginx or haproxy. Use X-Forwarded-For before X-Real-Ip as nginx uses X-Real-Ip with the proxy's IP."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"\nfunc SomeHandler(c *gin.Context) {\n    ip := c.ClientIP()\n}\n")),Object(i.b)("h3",{id:"iswebsocket-bool"},"IsWebsocket() bool"),Object(i.b)("p",null,"Returns true if the request headers indicate that a websocket handshake is being initiated by the client."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"\nfunc SomeHandler(c *gin.Context) {\n    yes := c.IsWebsocket()\n}\n")),Object(i.b)("h3",{id:"header"},"Header()"),Object(i.b)("p",null,"Writes a header (key, value) in the response "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'\nfunc SomeHandler(c *gin.Context) {\n    c.Header("key", "value")\n}\n')),Object(i.b)("h3",{id:"setcookiename-value-string-maxage-int-path-domain-string-secure-httponly-bool"},"SetCookie(name, value string, maxAge int, path, domain string, secure, httpOnly bool)"),Object(i.b)("p",null,"Sets a cookie"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"\nfunc SomeHandler(c *gin.Context) {\n    c.SetCookie(name, value string, maxAge int, path, domain string, secure, httpOnly bool)\n}\n")),Object(i.b)("h3",{id:"cookiename-string-string-error"},"Cookie(name string) (string, error)"),Object(i.b)("p",null,"Returns the named cookie provided in the request or if not found."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'\nfunc SomeHandler(c *gin.Context) {\n    val, err := c.Cookie("name")\n}\n')),Object(i.b)("h3",{id:"htmlcode-int-name-string-obj-interface"},"HTML(code int, name string, obj interface{})"),Object(i.b)("p",null,"Passes the ",Object(i.b)("inlineCode",{parentName:"p"},"obj")," to the given HTML template then it renders it."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'\nfunc SomeHandler(c *gin.Context) {\n    c.HTML(\n        http.StatusOK, "index.html", gin.H{\n            "message": "this is a message"\n        })\n}\n')),Object(i.b)("h3",{id:"jsoncode-int-obj-interface"},"JSON(code int, obj interface{})"),Object(i.b)("p",null,"Renders the given ",Object(i.b)("inlineCode",{parentName:"p"},"obj")," as json"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'\nfunc SomeHandler(c *gin.Context) {\n    c.JSON(\n        http.StatusOK, gin.H{\n            "message": "this is a message"\n        })\n}\n')),Object(i.b)("h3",{id:"xmlcode-int-obj-interface"},"XML(code int, obj interface{})"),Object(i.b)("p",null,"Renders the given ",Object(i.b)("inlineCode",{parentName:"p"},"obj")," as XML"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'\nfunc SomeHandler(c *gin.Context) {\n    c.XML(\n        http.StatusOK, gin.H{\n            "message": "this is a message"\n        })\n}\n')),Object(i.b)("h3",{id:"xmlcode-int-obj-interface-1"},"XML(code int, obj interface{})"),Object(i.b)("p",null,"Renders the given ",Object(i.b)("inlineCode",{parentName:"p"},"obj")," as YAML"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},'\nfunc SomeHandler(c *gin.Context) {\n    c.YAML(\n        http.StatusOK, gin.H{\n            "message": "this is a message"\n        })\n}\n')),Object(i.b)("h3",{id:"filefilepath-string"},"File(filepath string)"),Object(i.b)("p",null,"Writes the specified file into the body stream"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"\nfunc SomeHandler(c *gin.Context) {\n    c.File(filepath)\n}\n")),Object(i.b)("h3",{id:"fileattachmentfilepath-filename-string"},"FileAttachment(filepath, filename string)"),Object(i.b)("p",null,"Writes the specified file into the body stream with the given name"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-go"},"\nfunc SomeHandler(c *gin.Context) {\n    c.File(filepath, filename)\n}\n")),Object(i.b)("p",null,"for more methods and information check the ",Object(i.b)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/gin-gonic/gin#Context"},"Gin Context Docs"),":"))}b.isMDXComponent=!0}}]);