"use strict";(self.webpackChunkgocondor_site=self.webpackChunkgocondor_site||[]).push([[6058],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>c});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(t),k=r,c=u["".concat(s,".").concat(k)]||u[k]||m[k]||i;return t?a.createElement(c,o(o({ref:n},p),{},{components:t})):a.createElement(c,o({ref:n},p))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=k;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},6793:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=t(7462),r=(t(7294),t(3905));const i={title:"Validation"},o=void 0,l={unversionedId:"validation",id:"validation",title:"Validation",description:"To access the validator call the function GetValidator() in the context object",source:"@site/docs/validation.md",sourceDirName:".",slug:"/validation",permalink:"/docs/validation",draft:!1,editUrl:"https://github.com/gocondor/gocondor.github.io/edit/source/docs/validation.md",tags:[],version:"current",frontMatter:{title:"Validation"},sidebar:"docsSidebar",previous:{title:"Response",permalink:"/docs/response"},next:{title:"Middlewares",permalink:"/docs/middlewares"}},s={},d=[{value:"Available Rules:",id:"available-rules",level:4}],p={toc:d},u="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"To access the validator call the function ",(0,r.kt)("inlineCode",{parentName:"p"},"GetValidator()")," in the context object\nThe validator takes two parameters, the first parameter is a map of the data to be validated, and the second parameter is a map of the rules of validation\nBelow is an example for validating an input of ",(0,r.kt)("inlineCode",{parentName:"p"},"email")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"password")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'func Login(c *core.Context) *core.Response {\n    v := c.GetValidator()\n    data := map[string]interface{}{\n        "email":    "mail@example.com",\n        "password": "secret",\n    }\n    rules := map[string]interface{}{\n        "email":    "required|email",\n        "password": "required|length:6,10",\n    }\n    vResult := v.Validate(data, rules)\n    errorsJson := vResult.GetErrorMessagesJson()\n    if vResult.Failed() {\n        return c.Response.SetStatusCode(422).Json(errorsJson)\n    }\n    // Proceed with logging in the user\n}\n')),(0,r.kt)("h4",{id:"available-rules"},"Available Rules:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"required")),"\nmakes sure the field under validation is not missing"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"email")),"\nmakes sure the field under validation is a valid email address"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"url")),"\nmakes sure the field under validation is a valid URL"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"alpha")),"\nmakes sure the field under validation contains only valid alphabet "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"digit")),"\nmakes sure the field under validation contains only valid numbers"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"alphaNumeric")),"\nmakes sure the field under validation contains alphabet letters and valid numbers only"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"lowerCase")),"\nmakes sure the field under validation contains lower case letters only"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"upperCase")),"\nmakes sure the field under validation contains uppercase only"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"int")),"\nmakes sure the field under validation is integer only"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"float")),"\nmakes sure the field under validation is float only"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"uuid")),"\nmakes sure the field under validation is a valid uuid"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"creditCard")),"\nmakes sure the field under validation is a valid credit card number"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"json")),"\nmakes sure the field under validation is a valid json string"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"base64")),"\nmakes sure the field under validation is a valid base64"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"countryCode2")),"\nmakes sure the field under validation is a valid iso country code of 2 letters"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"countryCode3")),"\nmakes sure the field under validation is a valid iso country code of 3 letters"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"isoCurrencyCode")),"\nmakes sure the field under validation is a valid iso currency code"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"mac")),"\nmakes sure the field under validation is a valid mac address"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"ip")),"\nmakes sure the field under validation is a valid ip address"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"ipv4")),"\nmakes sure the field under validation is a valid ip address version 4"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"ipv6")),"\nmakes sure the field under validation is a valid ip address version 6"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"subdomain")),"\nmakes sure the field under validation is a valid subdomain"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"domain")),"\nmakes sure the field under validation is a valid domain"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"dnsName")),"\nmakes sure the field under validation is a valid dns name"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"host")),"\nmakes sure the field under validation is a valid host"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"port")),"\nmakes sure the field under validation is a valid port number"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"mongoID")),"\nmakes sure the field under validation is a valid mongoDB id"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"latitude")),"\nmakes sure the field under validation is a valid latitude"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"longitude")),"\nmakes sure the field under validation is a valid longitude"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"ssn")),"\nmakes sure the field under validation is a valid ssn"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"semver")),"\nmakes sure the field under validation is a semantic version number"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"min:")),"\nmakes sure the field under validation is a number with a minimum value of what's set.\nExample: ",(0,r.kt)("inlineCode",{parentName:"p"},"min:5"),"\nthis makes sure the value under validation is a number with a minimum value of ",(0,r.kt)("inlineCode",{parentName:"p"},"5")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"max:")),"\nmakes sure the field under validation is a number with a max value of what's set.\nExample: ",(0,r.kt)("inlineCode",{parentName:"p"},"max:5"),"\nthis makes sure the value under validation is a number with a max value of ",(0,r.kt)("inlineCode",{parentName:"p"},"5")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"in:")),"\nmakes sure the field under validation is one of the values that are set.\nExample: ",(0,r.kt)("inlineCode",{parentName:"p"},"in:USD,EUR,AED"),".\nthis makes sure the value under validation is either ",(0,r.kt)("inlineCode",{parentName:"p"},"USD")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"EUR")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"AED")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"dateLayout:")),"\nmakes sure the field under validation is a valid date with the given layout.\nExample: ",(0,r.kt)("inlineCode",{parentName:"p"},"dateLayout:2006-01-02T15:04:05")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"length:")),"\nmakes sure the length (",(0,r.kt)("inlineCode",{parentName:"p"},"number of letters"),") of the field under validation is within the given range.\nExample: ",(0,r.kt)("inlineCode",{parentName:"p"},"length:5,7")))}m.isMDXComponent=!0}}]);